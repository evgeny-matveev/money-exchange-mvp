{"version":3,"sources":["node_modules/money/money.js","index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["document","addEventListener","e","firstInput","getElementById","secondInput","firstSelect","secondSelect","fetch","then","resp","json","data","rates","setTimeout","money","exchangedMoney","exchangeMoney","value","focus","amount","isReverse","firstCurrency","options","selectedIndex","secondCurrency","result","Number","from","to","toFixed","newExchangedValue","target","onchange"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"money-exchange-mvp.map","sourcesContent":["/*!\n * money.js / fx() v0.2\n * Copyright 2014 Open Exchange Rates\n *\n * JavaScript library for realtime currency conversion and exchange rate calculation.\n *\n * Freely distributable under the MIT license.\n * Portions of money.js are inspired by or borrowed from underscore.js\n *\n * For details, examples and documentation:\n * http://openexchangerates.github.io/money.js/\n */\n(function(root, undefined) {\n\n\t// Create a safe reference to the money.js object for use below.\n\tvar fx = function(obj) {\n\t\treturn new fxWrapper(obj);\n\t};\n\n\t// Current version.\n\tfx.version = '0.2';\n\n\n\t/* --- Setup --- */\n\n\t// fxSetup can be defined before loading money.js, to set the exchange rates and the base\n\t// (and default from/to) currencies - or the rates can be loaded in later if needed.\n\tvar fxSetup = root.fxSetup || {\n\t\trates : {},\n\t\tbase : \"\"\n\t};\n\n\t// Object containing exchange rates relative to the fx.base currency, eg { \"GBP\" : \"0.64\" }\n\tfx.rates = fxSetup.rates;\n\n\t// Default exchange rate base currency (eg \"USD\"), which all the exchange rates are relative to\n\tfx.base = fxSetup.base;\n\n\t// Default from / to currencies for conversion via fx.convert():\n\tfx.settings = {\n\t\tfrom : fxSetup.from || fx.base,\n\t\tto : fxSetup.to || fx.base\n\t};\n\n\n\t/* --- Conversion --- */\n\n\t// The base function of the library: converts a value from one currency to another\n\tvar convert = fx.convert = function(val, opts) {\n\t\t// Convert arrays recursively\n\t\tif (typeof val === 'object' && val.length) {\n\t\t\tfor (var i = 0; i< val.length; i++ ) {\n\t\t\t\tval[i] = convert(val[i], opts);\n\t\t\t}\n\t\t\treturn val;\n\t\t}\n\n\t\t// Make sure we gots some opts\n\t\topts = opts || {};\n\n\t\t// We need to know the `from` and `to` currencies\n\t\tif( !opts.from ) opts.from = fx.settings.from;\n\t\tif( !opts.to ) opts.to = fx.settings.to;\n\n\t\t// Multiple the value by the exchange rate\n\t\treturn val * getRate( opts.to, opts.from );\n\t};\n\n\t// Returns the exchange rate to `target` currency from `base` currency\n\tvar getRate = function(to, from) {\n\t\t// Save bytes in minified version\n\t\tvar rates = fx.rates;\n\n\t\t// Make sure the base rate is in the rates object:\n\t\trates[fx.base] = 1;\n\n\t\t// Throw an error if either rate isn't in the rates array\n\t\tif ( !rates[to] || !rates[from] ) throw \"fx error\";\n\n\t\t// If `from` currency === fx.base, return the basic exchange rate for the `to` currency\n\t\tif ( from === fx.base ) {\n\t\t\treturn rates[to];\n\t\t}\n\n\t\t// If `to` currency === fx.base, return the basic inverse rate of the `from` currency\n\t\tif ( to === fx.base ) {\n\t\t\treturn 1 / rates[from];\n\t\t}\n\n\t\t// Otherwise, return the `to` rate multipled by the inverse of the `from` rate to get the\n\t\t// relative exchange rate between the two currencies\n\t\treturn rates[to] * (1 / rates[from]);\n\t};\n\n\n\t/* --- OOP wrapper and chaining --- */\n\n\t// If fx(val) is called as a function, it returns a wrapped object that can be used OO-style\n\tvar fxWrapper = function(val) {\n\t\t// Experimental: parse strings to pull out currency code and value:\n\t\tif ( typeof\tval === \"string\" ) {\n\t\t\tthis._v = parseFloat(val.replace(/[^0-9-.]/g, \"\"));\n\t\t\tthis._fx = val.replace(/([^A-Za-z])/g, \"\");\n\t\t} else {\n\t\t\tthis._v = val;\n\t\t}\n\t};\n\n\t// Expose `wrapper.prototype` as `fx.prototype`\n\tvar fxProto = fx.prototype = fxWrapper.prototype;\n\n\t// fx(val).convert(opts) does the same thing as fx.convert(val, opts)\n\tfxProto.convert = function() {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\targs.unshift(this._v);\n\t\treturn convert.apply(fx, args);\n\t};\n\n\t// fx(val).from(currency) returns a wrapped `fx` where the value has been converted from\n\t// `currency` to the `fx.base` currency. Should be followed by `.to(otherCurrency)`\n\tfxProto.from = function(currency) {\n\t\tvar wrapped = fx(convert(this._v, {from: currency, to: fx.base}));\n\t\twrapped._fx = fx.base;\n\t\treturn wrapped;\n\t};\n\n\t// fx(val).to(currency) returns the value, converted from `fx.base` to `currency`\n\tfxProto.to = function(currency) {\n\t\treturn convert(this._v, {from: this._fx ? this._fx : fx.settings.from, to: currency});\n\t};\n\n\n\t/* --- Module Definition --- */\n\n\t// Export the fx object for CommonJS. If being loaded as an AMD module, define it as such.\n\t// Otherwise, just add `fx` to the global object\n\tif (typeof exports !== 'undefined') {\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\texports = module.exports = fx;\n\t\t}\n\t\texports.fx = fx;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\t// Return the library as an AMD module:\n\t\tdefine([], function() {\n\t\t\treturn fx;\n\t\t});\n\t} else {\n\t\t// Use fx.noConflict to restore `fx` back to its original value before money.js loaded.\n\t\t// Returns a reference to the library's `fx` object; e.g. `var money = fx.noConflict();`\n\t\tfx.noConflict = (function(previousFx) {\n\t\t\treturn function() {\n\t\t\t\t// Reset the value of the root's `fx` variable:\n\t\t\t\troot.fx = previousFx;\n\t\t\t\t// Delete the noConflict function:\n\t\t\t\tfx.noConflict = undefined;\n\t\t\t\t// Return reference to the library to re-assign it:\n\t\t\t\treturn fx;\n\t\t\t};\n\t\t})(root.fx);\n\n\t\t// Declare `fx` on the root (global/window) object:\n\t\troot['fx'] = fx;\n\t}\n\n\t// Root will be `window` in browser or `global` on the server:\n}(this));\n","import 'normalize.css'\nimport styles from './index.scss'\nimport fx from 'money'\n\ndocument.addEventListener('DOMContentLoaded', function (e) {\n  const firstInput = document.getElementById('first-value-input')\n  const secondInput = document.getElementById('second-value-input')\n  const firstSelect = document.getElementById('first-select')\n  const secondSelect = document.getElementById('second-select')\n\n  fetch('https://api.fixer.io/latest?base=BGN&symbols=RUB,USD,EUR,GBP,CNY,HUF')\n    .then((resp) => resp.json())\n    .then((data) => fx.rates = data.rates)\n    .then(() => {\n      setTimeout(function () {\n        const money = 1\n        const exchangedMoney = exchangeMoney(money)\n        firstInput.value = money\n        secondInput.value = exchangedMoney\n        firstInput.focus()\n      }, 1000);\n    })\n\n  const exchangeMoney = (amount, isReverse) => {\n    const firstCurrency = firstSelect\n      .options[firstSelect.selectedIndex].value\n    const secondCurrency = secondSelect\n      .options[secondSelect.selectedIndex].value\n    if (isReverse) {\n      const result = fx(Number(amount)).from(secondCurrency).to(firstCurrency)\n      return Number(result).toFixed(2)\n    }\n    const result = fx(Number(amount)).from(firstCurrency).to(secondCurrency)\n    return Number(result).toFixed(2)\n  }\n\n  firstInput.addEventListener('input', (e) => {\n    const newExchangedValue = exchangeMoney(e.target.value)\n    secondInput.value = newExchangedValue\n  })\n\n  secondInput.addEventListener('input', (e) => {\n    const newExchangedValue = exchangeMoney(e.target.value)\n    firstInput.value = newExchangedValue\n  })\n\n  firstSelect.onchange = function () {\n    secondInput.value = exchangeMoney(firstInput.value)\n  }\n\n  secondSelect.onchange = function () {\n    firstInput.value = exchangeMoney(secondInput.value, true)\n  }\n})\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}